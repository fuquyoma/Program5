import pytest

# Функция, которая возвращает первые n элементов последовательности Фибоначчи
def fib(n):
    """Возвращает список первых n элементов последовательности Фибоначчи"""
    if n <= 0:
        return []
    a, b = 0, 1
    result = [a, b]
    for _ in range(2, n):
        a, b = b, a + b
        result.append(a)
    return result

# Тесты
def test_fib_1():
    """Тривиальный случай n = 1"""
    assert fib(1) == [0, 1], "fib(1) должно быть [0, 1]"

def test_fib_2():
    """Проверка fib(2)"""
    assert fib(2) == [0, 1, 1], "fib(2) должно быть [0, 1, 1]"

# Тест для случая n = 3
def test_fib_3():
    assert fib(3) == [0, 1, 1, 2], "fib(3) должно быть [0, 1, 1, 2]"

# Тест для большего числа n
def test_fib_5():
    assert fib(5) == [0, 1, 1, 2, 3, 5], "fib(5) должно быть [0, 1, 1, 2, 3, 5]"

# Тест для нулевого случая
def test_fib_zero():
    """Если n = 0, возвращаем пустой список"""
    assert fib(0) == [], "fib(0) должно возвращать пустой список"

# Тест для отрицательного числа
def test_fib_negative():
    """Если n отрицательное, возвращаем пустой список"""
    assert fib(-1) == [], "fib(-1) должно возвращать пустой список"

# Тест для большого числа n
def test_fib_large():
    """Проверка для большого числа n"""
    expected_result = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34]  # До 10-го числа Фибоначчи
    assert fib(10) == expected_result, "fib(10) должно быть правильным"

# Запуск тестов с помощью pytest
if __name__ == "__main__":
    pytest.main()
